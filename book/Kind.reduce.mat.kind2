Kind.reduce.mat
: ∀(maj: Bool)
  ∀(nam: String)
  ∀(x: Kind.Term)
  ∀(z: Kind.Term)
  ∀(s: ∀(x: Kind.Term) Kind.Term)
  ∀(p: ∀(x: Kind.Term) Kind.Term)
  Kind.Term
= λmaj λnam λx λz λs λp
  use P = ∀(z: Kind.Term) ∀(s: ∀(x: Kind.Term) Kind.Term)
    Kind.Term
  use Y = λx.val
    switch x = x.val {
      0: λz λs (Kind.reduce maj z)
      _: λz λs (Kind.reduce maj (s (Kind.num x-1))) 
    }: ∀(z: Kind.Term) ∀(s: ∀(x: Kind.Term) Kind.Term)
    Kind.Term
  use N = λx λz λs (Kind.mat nam x z s p)
  (Kind.if.num x P Y N z s)