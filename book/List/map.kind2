use List/{cons,nil}

map <A> <B> (xs: (List A)) (f: A -> B) : (List B) =
  fold xs {
    ++: (f xs.head) ++ xs.tail
    []: []
  }
  
//map A B (xs: (List A)) (f: ∀(x: A) B) : (List B) =
  //(List.fold _ xs _ λhλt(cons _ (f h) t) [])

  //match xs {
    //cons: (cons _ (f xs.head) (map _ _ xs.tail f))
    //nil: []
  //}
