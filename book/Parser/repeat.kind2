Parser.repeat
: ∀(n: Nat) ∀(A: *) ∀(p: (Parser A))
  (Parser (List A))
= λn λA λp
  use P = λx (Parser (List A))
  use succ = λn.pred
    (Parser.bind
      A
      (List A)
      p
      λhead
      (Parser.bind
        (List A)
        (List A)
        (Parser.repeat n.pred A p)
        λtail (Parser.pure (List A) (List.cons A head tail))
      )
    )
  use zero = (Parser.pure (List A) (List.nil A))
  (~n P succ zero)